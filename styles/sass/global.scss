@use 'sass:color';
@use 'sass:map' as *;
@use 'sass:math';

@use "_colors";
@use "_fonts";
@use 'utils/_media_queries' as *;
@use 'utils/_list_utils';

@use '../../vendor/bulma/bulma.sass' as bulma with (
  $family-sans-serif: "Exo 2",
  $family-code: 'Share Tech Mono',
  $purple: colors.$purple,
  $text: colors.$text-light,
  $text-strong: color.scale(colors.$text-light, $lightness: 50%),
  $text-light: color.scale(colors.$text-light, $lightness: -50%),
  $link: colors.$purple,
  $code: colors.$purple-light,
  $background: colors.$rose-pine-bg,
  $scheme-main: colors.$rose-pine-moon-bg,
  $code-background: colors.$rose-pine-moon-bg,
  $border: color.scale(colors.$rose-pine-moon-bg, $lightness: 10%),
  $radius-large: 10px
);

//
// Style settings
//
$desktop-box-fullwidth: false !default;
$mobile-box-fullwidth: true !default;

//
// Internal definitions
//
$content-padding-h: 32px;
$sidebar: (
  "width": (
    "desktop": 256px,
    "mobile": 80%,
  ),
  "bg": colors.$rose-pine-moon-bg,
  "shadow-radius": $content-padding-h * 0.75,
);
$content: (
  // ! Pair order is important
  "padding":
    (
      "desktop": (
        "top": 3em,
        "right": $content-padding-h,
        "bottom": 0,
        "left": get($sidebar, "width", "desktop") + $content-padding-h,
      ),
      "mobile": (
        "top": 3em,
        "right": $content-padding-h,
        "bottom": 0,
        "left": $content-padding-h,
      ),
    )
);

@mixin box($padding: "medium") {
  box-shadow: bulma.$box-shadow;
  color: bulma.$box-color;
  background-color: bulma.$box-background-color;
  border-radius: bulma.$box-radius;
  padding: get(
    (
      "micro": math.div(bulma.$box-padding, 8) math.div(bulma.$box-padding, 4),
      "small": math.div(bulma.$box-padding, 2),
      "medium": bulma.$box-padding,
      "large": bulma.$box-padding * 2,
    ),
    $padding
  );
}

@mixin box-inline {
  @include box($padding: "micro");
  display: inline;
  box-shadow: none;
}

// Bad name because it can cause double negatives
@mixin has-box-not-fullwidth {
  pre {
    width: min-content;
  }

  table {
    // min-content might break lines way too much
    width: auto;
  }
}

html {
  background-color: bulma.$background;
}

table {
  @include box;
  overflow: hidden;

  th {
    background: bulma.$purple;
  }
}

.sidebar {
  @extend .menu;

  @include mobile {
    width: get($sidebar, "width", "mobile");
  }

  padding: 1em 0;
  position: fixed;
  width: get($sidebar, "width", "desktop");
  height: 100%;
  // Scrollbar should hide automatically
  overflow-y: auto;

  background-color: get($sidebar, "bg");
  box-shadow: 0 0 get($sidebar, "shadow-radius") colors.$shadow;

  // Displays data-title attr above the list, as its title
  .menu-list::before {
    @extend .menu-label;
    text-align: center;
    display: block;
    content: attr(data-titulo);
    margin-bottom: 1em;
  }

  .categoria {
    @include box($padding: "small");
    border: 1px solid bulma.$purple;

    i {
      // jQuery "fast" animation duration
      transition: transform 200ms ease-in-out;
    }

    &.is-active {
      &:hover {
        box-shadow: 0 0 10px bulma.$purple;
      }
      box-shadow: 0 0 5px bulma.$purple;
    }
  }
}

#content {
  @extend .content;

  @include mobile {
    @if not $mobile-box-fullwidth {
      @include has-box-not-fullwidth;
    }

    padding: list_utils.with-spaces(values(get($content, "padding", "mobile")));
  }

  @include desktop {
    @if not $desktop-box-fullwidth {
      @include has-box-not-fullwidth;
    }

    margin-left: 20%;
    width: max(60%, 750px);

    padding: list_utils.with-spaces(
      values(get($content, "padding", "desktop"))
    );
  }

  li {
    list-style-position: inside;
    &::marker {
      color: bulma.$purple;
    }
  }

  // Lists that aren't nested
  > ol,
  > ul {
    @include box;
    margin-left: 0;
  }

  // Code block
  pre {
    @include box;
    // Remove paddings because highlightjs-line-numbers will insert a table
    // inside the code block
    padding: 0;

    .hljs {
      padding: 0;

      &-ln {
        tr:not(:first-child) td {
          padding-top: 0;
        }
        tr:not(:last-child) td {
          padding-bottom: 0;
          border-bottom: none; // Removing the "lines"
        }

        // Line numbers
        &-numbers {
          width: 1em;
          background-color: bulma.$purple;
          color: colors.$rose-pine-moon-bg;
        }
      }
    }
  }

  // Inline code
  :not(pre) code {
    @include box-inline;
    color: bulma.$code;
  }
}
